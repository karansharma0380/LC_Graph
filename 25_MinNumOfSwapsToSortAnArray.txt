Ques: find the minimum number of swaps required to sort the array.

	Input: {4, 3, 2, 1}
	Output: 2
	Explanation: Swap index 0 with 3 and 1 with 2 to form the sorted array {1, 2, 3, 4}

Soln: 



T.C: O(nlogn)
static class Pair implements Comparable<Pair>{
	int val;
	int idx;

	Pair(int val, int idx){
		this.val=val;
		this.idx=idx;
	}

	public int compareTo(Pair o){
		return this.val-o.val;
	}

}
public static int minSwaps(int[] arr1){
	int n = arr1.length;
	Pair[] arr = new Pair[n];

	for(int i=0;i<n;i++){
		arr[i] = new Pair(arr[i],i);
	}

	Arrays.sort(arr);
	int ans=0;

	boolean[] vis = new boolean[n];

	for(int i=0:i<n;i++){
		if(vis[i]==true || arr[i].idx==i){
			continue;
		}

		int clen=0;
		int j=i;
		while(vis[j]==false){
			vis[j]=true;
			clen++;
			j=arr[j].idx;
		}

		ans+=clen-1;
	}

	return ans;
}

